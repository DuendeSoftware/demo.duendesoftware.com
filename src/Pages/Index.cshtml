@page
@model IdentityServerHost.Pages.Home.Index

<div class="welcome-page">
    <h1>
        <img src="~/duende-logo.svg" class="logo">
        Welcome to Duende IdentityServer
        <small class="text-muted">(version @Model.Version)</small>
    </h1>

    <ul>
        <li>
            IdentityServer publishes a
            <a href="~/.well-known/openid-configuration">discovery document</a>
            where you can find metadata and links to all the endpoints, key material, etc.
        </li>
        <li>
            Click <a href="~/diagnostics">here</a> to see the claims for your current session.
        </li>
        <li>
            Click <a href="~/grants">here</a> to manage your stored grants.
        </li>
        <li>
            Click <a href="~/ciba/all">here</a> to view your pending CIBA login requests.
        </li>
        <li>
            Here are links to the
            <a href="https://github.com/duendesoftware/IdentityServer">source code repository</a>,
            <a href="https://github.com/duendesoftware/samples">ready to use samples</a>,
            and this <a href="https://github.com/DuendeSoftware/demo.duendesoftware.com">demo server</a>.
        </li>
    </ul>

    <ul>
        <h3>Demo clients</h3>
        <li>
            <b>client id: m2m</b> <br/>
            grant type: client credentials <br/>
            client secret: secret <br/>
            access token lifetime: 60 minutes<br/>
            allowed scopes: api
        </li>
        <li>
            <b>client id: m2m.jwt</b> <br/>
            grant type: client credentials <br/>
            client secret: private key JWT <br/>
            access token lifetime: 60 minutes<br/>
            allowed scopes: api
        </li>
        <li>
            <b>client id: m2m.short</b> <br/>
            grant type: client credentials <br/>
            client secret: secret <br/>
            access token lifetime: 75 seconds<br/>
            allowed scopes: api
        </li>
        <li>
            <b>client id: m2m.short.jwt</b> <br/>
            grant type: client credentials <br/>
            client secret: private key JWT <br/>
            access token lifetime: 75 seconds<br/>
            allowed scopes: api
        </li>
        <li>
            <b>client id: m2m.dpop</b> <br/>
            grant type: client credentials <br/>
            client secret: secret <br/>
            access token lifetime: 60 minutes<br/>
            allowed scopes: api<br />
            requires the use of DPoP
        </li>
        <li>
            <b>client id: m2m.dpop.nonce</b> <br/>
            grant type: client credentials <br/>
            client secret: secret <br/>
            access token lifetime: 60 minutes<br/>
            allowed scopes: api<br/>
            requires the use of DPoP and nonce
        </li>

        <li>
            <b>client id: interactive.confidential</b> <br/>
            grant type: authorization code with PKCE and client credentials<br/>
            client secret: secret <br/>
            access token lifetime: 60 minutes<br/>
            allowed scopes: openid profile email api offline_access
        </li>
        <li>
            <b>client id: interactive.confidential.jwt</b> <br/>
            grant type: authorization code with PKCE and private key jwt client credentials<br/>
            client secret: private key JWT <br/>
            access token lifetime: 60 minutes<br/>
            allowed scopes: openid profile email api offline_access
        </li>
        <li>
            <b>client id: interactive.confidential.jar.jwt</b> <br/>
            grant type: authorization code with PKCE and client credentials - requires JAR<br/>
            client secret: private key JWT <br/>
            access token lifetime: 60 minutes<br/>
            allowed scopes: openid profile email api offline_access
        </li>
        <li>
            <b>client id: interactive.confidential.short</b> <br/>
            grant type: authorization code with PKCE and client credentials<br/>
            client secret: secret <br/>
            access token lifetime: 75 seconds <br/>
            allowed scopes: openid profile email api offline_access
        </li>
        <li>
            <b>client id: interactive.confidential.short.jwt</b> <br/>
            grant type: authorization code with PKCE and private key jwt client credentials<br/>
            client secret: private key JWT <br/>
            access token lifetime: 75 seconds<br/>
            allowed scopes: openid profile email api offline_access
        </li>
        <li>
            <b>client id: interactive.confidential.short.jar.jwt</b> <br/>
            grant type: authorization code with PKCE and client credentials - requires JAR<br/>
            client secret: private key JWT <br/>
            access token lifetime: 75 seconds<br/>
            allowed scopes: openid profile email api offline_access
        </li>
        <li>
            <b>client id: interactive.public</b> <br/>
            grant type: authorization code with PKCE<br/>
            access token lifetime: 60 minutes<br/>
            allowed scopes: openid profile email api offline_access
        </li>
        <li>
            <b>client id: interactive.public.short</b> <br/>
            grant type: authorization code with PKCE<br/>
            access token lifetime: 75 seconds<br/>
            allowed scopes: openid profile email api offline_access
        </li>
        <li>
            <b>client id: device</b> <br/>
            grant type: urn:ietf:params:oauth:grant-type:device_code <br/>
            access token lifetime: 60 minutes<br/>
            allowed scopes: openid profile email api
        </li>
        <li>
            <b>client id: login</b> <br/>
            grant type: id_token<br/>
            allowed scopes: openid profile email
        </li>
        <li>
            You can call a test API at https://demo.duendesoftware.com/api/test. This accepts Bearer token requests.
        </li>
        <li>
            You can call a test API at https://demo.duendesoftware.com/api/dpop/test. This accepts DPoP token requests.
        </li>
        <li>
            You can use the below RSA key for all clients requiring private key JWT authentication or JAR:
            <pre>
"""
{
    "d":"GmiaucNIzdvsEzGjZjd43SDToy1pz-Ph-shsOUXXh-dsYNGftITGerp8bO1iryXh_zUEo8oDK3r1y4klTonQ6bLsWw4ogjLPmL3yiqsoSjJa1G2Ymh_RY_sFZLLXAcrmpbzdWIAkgkHSZTaliL6g57vA7gxvd8L4s82wgGer_JmURI0ECbaCg98JVS0Srtf9GeTRHoX4foLWKc1Vq6NHthzqRMLZe-aRBNU9IMvXNd7kCcIbHCM3GTD_8cFj135nBPP2HOgC_ZXI1txsEf-djqJj8W5vaM7ViKU28IDv1gZGH3CatoysYx6jv1XJVvb2PH8RbFKbJmeyUm3Wvo-rgQ",
    "dp":"YNjVBTCIwZD65WCht5ve06vnBLP_Po1NtL_4lkholmPzJ5jbLYBU8f5foNp8DVJBdFQW7wcLmx85-NC5Pl1ZeyA-Ecbw4fDraa5Z4wUKlF0LT6VV79rfOF19y8kwf6MigyrDqMLcH_CRnRGg5NfDsijlZXffINGuxg6wWzhiqqE",
    "dq":"LfMDQbvTFNngkZjKkN2CBh5_MBG6Yrmfy4kWA8IC2HQqID5FtreiY2MTAwoDcoINfh3S5CItpuq94tlB2t-VUv8wunhbngHiB5xUprwGAAnwJ3DL39D2m43i_3YP-UO1TgZQUAOh7Jrd4foatpatTvBtY3F1DrCrUKE5Kkn770M",
    "e":"AQAB",
    "kid":"ZzAjSnraU3bkWGnnAqLapYGpTyNfLbjbzgAPbbW2GEA",
    "kty":"RSA",
    "n":"wWwQFtSzeRjjerpEM5Rmqz_DsNaZ9S1Bw6UbZkDLowuuTCjBWUax0vBMMxdy6XjEEK4Oq9lKMvx9JzjmeJf1knoqSNrox3Ka0rnxXpNAz6sATvme8p9mTXyp0cX4lF4U2J54xa2_S9NF5QWvpXvBeC4GAJx7QaSw4zrUkrc6XyaAiFnLhQEwKJCwUw4NOqIuYvYp_IXhw-5Ti_icDlZS-282PcccnBeOcX7vc21pozibIdmZJKqXNsL1Ibx5Nkx1F1jLnekJAmdaACDjYRLL_6n3W4wUp19UvzB1lGtXcJKLLkqB6YDiZNu16OSiSprfmrRXvYmvD8m6Fnl5aetgKw",
    "p":"7enorp9Pm9XSHaCvQyENcvdU99WCPbnp8vc0KnY_0g9UdX4ZDH07JwKu6DQEwfmUA1qspC-e_KFWTl3x0-I2eJRnHjLOoLrTjrVSBRhBMGEH5PvtZTTThnIY2LReH-6EhceGvcsJ_MhNDUEZLykiH1OnKhmRuvSdhi8oiETqtPE",
    "q":"0CBLGi_kRPLqI8yfVkpBbA9zkCAshgrWWn9hsq6a7Zl2LcLaLBRUxH0q1jWnXgeJh9o5v8sYGXwhbrmuypw7kJ0uA3OgEzSsNvX5Ay3R9sNel-3Mqm8Me5OfWWvmTEBOci8RwHstdR-7b9ZT13jk-dsZI7OlV_uBja1ny9Nz9ts",
    "qi":"pG6J4dcUDrDndMxa-ee1yG4KjZqqyCQcmPAfqklI2LmnpRIjcK78scclvpboI3JQyg6RCEKVMwAhVtQM6cBcIO3JrHgqeYDblp5wXHjto70HVW6Z8kBruNx1AH9E8LzNvSRL-JVTFzBkJuNgzKQfD0G77tQRgJ-Ri7qu3_9o1M4"
}
"""
            </pre>
        </li>
    </ul>
</div>
